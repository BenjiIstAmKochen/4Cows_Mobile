@page "/Kuh_Daten"
@inject IDialogService DialogService
@inject CowTreatmentService cowTreatmentService

<MudGrid Justify="Justify.FlexEnd">
    <MudIconButton Icon="@Icons.Material.Filled.AddCircle" Color="Color.Secondary" Size="Size.Large" OnClick="OpenCowDialog"></MudIconButton>
</MudGrid>
<MudSpacer></MudSpacer>
<MudText Typo="Typo.h3">Kuh Behandlungen</MudText>

<MudTable Elevation="5" Items="@Treatment_Cows" Hover="true" Striped="@true" Filter="(Func<Treatment_Cow, bool>)FilterFunc1" @bind-SelectedItem="selectedCow">
    <ToolBarContent>
            <MudSpacer />
            <MudTextField @bind-Value="cowSearchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Halsbandnummer</MudTh>
        <MudTh>Ohrmarkennummer</MudTh>
        <MudTh>Datum</MudTh>
        <MudTh>Medikament</MudTh>
        <MudTh>Wie/Wo</MudTh>
        <MudTh>Menge</MudTh>

    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Halsbandnummer">@context.Collar_Number</MudTd>
        <MudTd DataLabel="Ohrmarkennummer">@context.Ear_Number</MudTd>
            <MudTd DataLabel="Datum">@context.Administration_Date</MudTd>
            <MudTd DataLabel="Medikament">@context.Medicine_Name</MudTd>
            <MudTd DataLabel="Wie/Wo">@context.WhereHow</MudTd>
            <MudTd DataLabel="Menge">@context.Medicine_Dosage</MudTd>

        </RowTemplate>
        <PagerContent>
            <MudTablePager RowsPerPageString="Behandlungen pro Seite" PageSizeOptions="new int[]{25, 50, 100}" />
        </PagerContent>
    </MudTable>

    @code{
    private string cowSearchString = "";
    private Treatment_Cow selectedCow = null;
    private IEnumerable<Treatment_Cow> Treatment_Cows = new List<Treatment_Cow>();

    private bool FilterFunc1(Treatment_Cow Treatment_Cow) => FilterFunc(Treatment_Cow, cowSearchString);

    private bool FilterFunc(Treatment_Cow Treatment_Cow, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (Treatment_Cow.Collar_Number.ToString() == searchString)
            return true;
        return false;
    }

    protected override async Task OnInitializedAsync()
    {
        await cowTreatmentService.GetAllDataAsync();
        Treatment_Cows = cowTreatmentService.Treatments.OrderByDescending(x => x.Administration_Date);
    }

    private void OpenCowDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, CloseButton = true, MaxWidth = MaxWidth.Medium, FullWidth = true };
        DialogService.Show<Add_Cow_Treatment_Dialog>("", options);
    }
}